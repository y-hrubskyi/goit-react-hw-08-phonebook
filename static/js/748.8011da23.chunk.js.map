{"version":3,"file":"static/js/748.8011da23.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/ModalBase/ModalBase.jsx","components/ContactForm/ContactForm.jsx","helpers/isInContacts.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: ${p => p.theme.spacing(5)};\n  padding: ${p => p.theme.spacing(3)};\n  margin-bottom: ${p => p.theme.spacing(5)};\n\n  border: 1px solid ${p => p.theme.colors.black};\n  border-radius: ${p => p.theme.radii.md};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const Field = styled(FormikField)`\n  font: inherit;\n\n  border-radius: ${p => p.theme.radii.sm};\n  outline-color: ${p => p.theme.colors.blue};\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n\n  border-radius: ${p => p.theme.radii.md};\n  background-color: transparent;\n\n  transition: ${p => p.theme.transition('color')},\n    ${p => p.theme.transition('background-color')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.blue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const formattedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(formattedFilter)\n    );\n  }\n);\n","import Modal from 'react-modal';\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nexport const ModalBase = ({ isOpen, onClose, children }) => {\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onClose} style={modalStyles}>\n      {children}\n    </Modal>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { isInContacts } from 'helpers/isInContacts';\n\nimport { Form, Label, Field, Button, ErrorMessage } from './ContactForm.styled';\nimport { ModalBase } from 'components/ModalBase/ModalBase';\nimport { useState } from 'react';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short').required('Required'),\n  number: Yup.string().min(7, 'Must be 7 or more').required('Required'),\n});\n\nexport const ContactForm = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleSubmit = (values, actions) => {\n    const isExist = isInContacts(contacts, values.name);\n\n    if (isExist) {\n      toast.error(`${values.name} is already in contacts.`);\n      return isExist;\n    }\n\n    dispatch(addContact(values))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact successfully added');\n        actions.resetForm();\n        toggleModal();\n      })\n      .catch(error => {\n        toast.error(`Oops.. ${error}`);\n      });\n  };\n\n  return (\n    <>\n      <Button type=\"button\" onClick={toggleModal}>\n        ➕\n      </Button>\n      <ModalBase isOpen={modalIsOpen} onClose={toggleModal}>\n        <Formik\n          initialValues={{ name: '', number: '' }}\n          onSubmit={handleSubmit}\n          validationSchema={contactsSchema}\n        >\n          <Form>\n            <Label>\n              Name\n              <Field type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </Label>\n\n            <Label>\n              Number\n              <Field type=\"tel\" name=\"number\" />\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </Label>\n\n            <Button type=\"submit\">Add contact</Button>\n          </Form>\n        </Formik>\n      </ModalBase>\n    </>\n  );\n};\n","export const isInContacts = (items, name) => {\n  const formattedName = name.toLowerCase();\n  return items.some(({ name }) => name.toLowerCase() === formattedName);\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const ContactsList = styled.ul`\n  list-style: disc;\n`;\n","import styled from 'styled-components';\n\nexport const ContactData = styled.span`\n  margin-right: ${p => p.theme.spacing(5)};\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n\n  background-color: transparent;\n  border-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.sm};\n\n  transition: ${p => p.theme.transition('color')},\n    ${p => p.theme.transition('background-color')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.blue};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\n\nimport { updateContact } from 'redux/contacts/operations';\nimport { ModalBase } from 'components/ModalBase/ModalBase';\nimport {\n  Form,\n  Label,\n  Field,\n  Button,\n  ErrorMessage,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short').required('Required'),\n  number: Yup.string().min(7, 'Must be 7 or more').required('Required'),\n});\n\nexport const ContactEditor = ({\n  contact: { id, name, number },\n  isOpen,\n  onClose,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(updateContact({ ...values, id }))\n      .unwrap()\n      .then(() => {\n        actions.resetForm();\n        toast.success('Successfully updated');\n        onClose();\n      })\n      .catch(error => {\n        toast.error(`Oops.. ${error}`);\n      });\n  };\n\n  return (\n    <ModalBase isOpen={isOpen} onClose={onClose}>\n      <Formik\n        initialValues={{ name, number }}\n        onSubmit={handleSubmit}\n        validationSchema={contactsSchema}\n      >\n        <Form>\n          <Label>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </Label>\n\n          <Label>\n            Number\n            <Field type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </Label>\n\n          <Button type=\"submit\">Update contact</Button>\n        </Form>\n      </Formik>\n    </ModalBase>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, ContactData } from './Contact.styled';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n\nexport const Contact = ({ contact }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const deleteContactFoo = contactId => {\n    dispatch(deleteContact(contactId)).then(() =>\n      toast.success('Contact successfully deleted')\n    );\n  };\n\n  return (\n    <li>\n      <ContactData>\n        {contact.name}: {contact.number}\n      </ContactData>\n      <Button type=\"button\" onClick={toggleModal}>\n        Edit\n      </Button>\n      {' | '}\n      <Button type=\"button\" onClick={() => deleteContactFoo(contact.id)}>\n        Delete\n      </Button>\n      <ContactEditor\n        isOpen={modalIsOpen}\n        onClose={toggleModal}\n        contact={contact}\n      />\n    </li>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { ContactsList } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  let filterInfo = '';\n  const results = contacts.length;\n  if (!results && !filter) filterInfo = <p>Your contact list is empty</p>;\n  if (!results && filter) filterInfo = <p>Not Finded</p>;\n\n  return contacts.length ? (\n    <ContactsList>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ContactsList>\n  ) : (\n    filterInfo\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: ${p => p.theme.spacing(5)};\n\n  border-radius: ${p => p.theme.radii.sm};\n  outline-color: ${p => p.theme.colors.blue};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { updateFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from 'components/App.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <Title>Contacts List</Title>\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n      <ContactForm />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","p","theme","spacing","FormikForm","colors","black","radii","md","Label","Field","FormikField","sm","blue","ErrorMessage","FormikError","red","Button","transition","white","selectFilter","state","filter","selectContacts","contacts","items","selectFilteredContacts","createSelector","formattedFilter","toLowerCase","name","includes","modalStyles","content","top","left","right","bottom","marginRight","transform","Modal","ModalBase","isOpen","onClose","children","onRequestClose","style","contactsSchema","Yup","shape","min","required","number","ContactForm","useState","modalIsOpen","setIsOpen","dispatch","useDispatch","useSelector","toggleModal","prevState","type","onClick","initialValues","onSubmit","values","actions","isExist","formattedName","some","isInContacts","toast","addContact","unwrap","then","resetForm","catch","error","validationSchema","component","ContactsList","ContactData","ContactEditor","contact","id","updateContact","Contact","contactId","deleteContact","ContactList","useEffect","fetchContacts","filterInfo","results","length","map","Input","Filter","value","onChange","e","updateFilter","target"],"sourceRoot":""}