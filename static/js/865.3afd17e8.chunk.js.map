{"version":3,"file":"static/js/865.3afd17e8.chunk.js","mappings":"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","sources":["components/common/AuthFormWrapper/AuthFormWrapper.styled.js","components/common/FormBase/FormBase.styled.js","components/common/FormBase/FormBase.jsx","components/common/FormField/FormField.styled.js","components/common/FormField/FormField.jsx","components/common/SubmitBtn/SubmitBtn.styled.js","components/common/SubmitBtn/SubmitBtn.jsx","components/common/ToastMessage/ToastMessage.styled.js","components/common/ToastMessage/ToastMessage.jsx","constants/validation/loginSchema.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthFormWrapper = styled.div`\n  align-self: center;\n`;\n","import styled from 'styled-components';\n\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: ${p => p.theme.spacing(5)};\n  width: 320px;\n  padding: ${p => p.theme.spacing(6)};\n\n  background-color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.lg};\n`;\n","import { Formik } from 'formik';\n\nimport { Form } from './FormBase.styled';\n\nexport const FormBase = ({\n  initialValues,\n  onSubmit,\n  validationSchema,\n  children,\n}) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form>{children}</Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field as FormikField, ErrorMessage as FormikError } from 'formik';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n  width: 100%;\n\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n\n  font-size: 18px;\n  color: ${p => p.theme.colors.black};\n\n  background: ${p => p.theme.colors.bg};\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 16px;\n`;\n","import { ErrorMessage, Field, Label } from './FormField.styled';\n\nexport const FormField = ({ label, type, name }) => {\n  return (\n    <Label>\n      {label}\n      <Field type={type} name={name} />\n      <ErrorMessage name={name} component=\"span\" />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n\n  font-size: 18px;\n  font-weight: 500;\n  color: ${p => p.theme.colors.black};\n\n  border: none;\n  border-radius: ${p => p.theme.radii.md};\n  background-color: ${p => p.theme.colors.bg};\n\n  transition: ${p => p.theme.transition('color')},\n    ${p => p.theme.transition('background-color')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { Button } from './SubmitBtn.styled';\n\nexport const SubmitBtn = ({ children, isLoading }) => {\n  return (\n    <Button type=\"submit\" disabled={isLoading}>\n      {children}\n    </Button>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n`;\n","import { Message } from './ToastMessage.styled';\n\nexport const ToastMessage = ({ children }) => {\n  return (\n    <Message>\n      <b>{children}</b>\n    </Message>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().min(7, 'Must be 7 or more').required('Required'),\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nimport { selectAuthIsLoading } from 'redux/auth/selectors';\nimport { logIn } from 'redux/auth/operations';\nimport { loginSchema } from 'constants/validation/loginSchema';\n\nimport { FormBase } from 'components/common/FormBase/FormBase';\nimport { FormField } from 'components/common/FormField/FormField';\nimport { SubmitBtn } from 'components/common/SubmitBtn/SubmitBtn';\nimport { ToastMessage } from 'components/common/ToastMessage/ToastMessage';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  const handleSubmit = async (values, actions) => {\n    await toast.promise(dispatch(logIn(values)).unwrap(), {\n      loading: 'Logging in...',\n      success: <ToastMessage>Login successful!</ToastMessage>,\n      error: <ToastMessage>Login failed. Try again.</ToastMessage>,\n    });\n    actions.resetForm();\n  };\n\n  return (\n    <FormBase\n      initialValues={{ email: '', password: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={loginSchema}\n    >\n      <FormField label=\"Email\" type=\"email\" name=\"email\" />\n      <FormField label=\"Password\" type=\"password\" name=\"password\" />\n      <SubmitBtn isLoading={isLoading}>Login</SubmitBtn>\n    </FormBase>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { AuthFormWrapper } from 'components/common/AuthFormWrapper/AuthFormWrapper.styled';\n\nconst LoginPage = () => {\n  return (\n    <AuthFormWrapper>\n      <LoginForm />\n    </AuthFormWrapper>\n  );\n};\n\nexport default LoginPage;\n"],"names":["AuthFormWrapper","styled","Form","FormikForm","p","theme","spacing","colors","white","accent","radii","lg","FormBase","initialValues","onSubmit","validationSchema","children","Label","Field","FormikField","black","bg","md","ErrorMessage","FormikError","red","FormField","label","type","name","component","Button","transition","SubmitBtn","isLoading","disabled","Message","ToastMessage","loginSchema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","useSelector","selectAuthIsLoading","handleSubmit","values","actions","toast","logIn","unwrap","loading","success","error","resetForm"],"sourceRoot":""}